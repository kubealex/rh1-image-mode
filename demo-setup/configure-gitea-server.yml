---
- name: RH1 Demo | Generate temporary inventory for Gitea
  hosts: localhost
  vars_files:
    - demo-setup-vars.yml
  tasks:
    - name: RH1 Demo | Add host to in-memory inventory
      ansible.builtin.add_host:
        name: "{{ server_hostname }}"
        ansible_user: "{{ server_username }}"
        ansible_password: "{{ server_password }}"
        ansible_ssh_common_args: "-o StrictHostKeyChecking=no"
        groups:
          - "gitea"

- name: RH1 Demo | Install Gitea Instance
  hosts: gitea
  vars_files:
    - demo-setup-vars.yml
  pre_tasks:
    - name: RH1 Demo | Ensure packages are up to date
      become: true
      ansible.builtin.dnf:
        name: "*"
        state: latest

    - name: RH1 Demo | Ensure Podman is installed
      become: true
      ansible.builtin.dnf:
        name: podman
        state: present

    - name: Enable linger for user
      ansible.builtin.command:
        argv:
          - /usr/bin/loginctl
          - enable-linger
          - "{{ ansible_user }}"
        creates: "/var/lib/systemd/linger/{{ ansible_user }}"

    - name: RH1 Demo | Enable Podman socket for image scanning
      ansible.builtin.systemd_service:
        name: podman.socket
        state: started
        enabled: true
        scope: user

  roles:
    - ansible-gitea-podman

- name: RH1 Demo | Configure Gitea instance
  hosts: localhost
  vars_files:
    - demo-setup-vars.yml
  tasks:
    - name: RH1 Demo | Get Gitea token
      ansible.builtin.uri:
        url: "https://{{ server_hostname }}:{{ gitea_server_port | default('3000', true) }}/api/v1/users/{{ gitea_username }}/tokens"
        user: "{{ gitea_username }}"
        password: "{{ gitea_password }}"
        method: POST
        force_basic_auth: true
        follow_redirects: true
        body_format: json
        status_code:
          - 200
          - 201
          - 400
          - 409
        body:
          name: "Gitea token"
          scopes:
            - write:repository
            - write:user
        validate_certs: false
      register: _auth_response

    - name: RH1 Demo | Set token as fact
      ansible.builtin.set_fact:
        auth_token: "{{ _auth_response.json.sha1 }}"

    - name: RH1 Demo | Migrate Gitea repos
      ansible.builtin.uri:
        url: "https://{{ server_hostname }}:{{ gitea_server_port | default('3000', true) }}/api/v1/repos/migrate"
        headers:
          Authorization: Bearer {{ auth_token }}
        method: POST
        force_basic_auth: true
        follow_redirects: true
        body_format: json
        status_code:
          - 200
          - 201
          - 400
          - 409
        body:
          clone_addr: "{{ item.source }}"
          repo_name: "{{ item.dest }}"
        validate_certs: false
      loop:
        - source: https://github.com/kubealex/rh1-image-mode.git
          dest: rh1-image-mode
        - source: https://github.com/kubealex/rh1-image-mode-container-app.git
          dest: rh1-image-mode-container-app
        - source: https://github.com/kubealex/rh1-image-mode-soe.git
          dest: rh1-image-mode-soe

    - name: RH1 Demo | Configure webhooks for repos
      ansible.builtin.uri:
        url: "https://{{ server_hostname }}:{{ gitea_server_port | default('3000', true) }}/api/v1/repos/{{ gitea_username }}/{{ item }}/hooks"
        headers:
          Authorization: Bearer {{ auth_token }}
        method: POST
        force_basic_auth: true
        follow_redirects: true
        body_format: json
        status_code:
          - 200
          - 201
          - 400
          - 409
        body:
          active: true
          config:
            content_type: "json"
            url: "{{ eda_controller_url | regex_replace(':[0-9]+', '') | regex_replace('https', 'http') }}:5010"
            http_method: POST
          events:
            - create
          type: gitea
        validate_certs: false
      loop:
        - rh1-image-mode-container-app
        - rh1-image-mode-soe
