---
- name: RH1 Demo | Build RHEL Image Mode container
  hosts: build_host
  vars_files:
    - vars.yml
  tasks:
    - name: RH1 Demo | Set working directory
      ansible.builtin.set_fact:
        workdir: "/home/{{ ansible_user }}/rhel-image-mode"

    - name: RH1 Demo | Clone app repo
      ansible.builtin.git:
        repo: "{{ image_mode_application_repo }}"
        dest: "{{ workdir }}/image-repo"

    - name: RH1 Demo | Login to registry
      containers.podman.podman_login:
        registry: "{{ rhel_image_mode_registry_url }}"
        username: "{{ rhel_image_mode_registry_username }}"
        password: "{{ rhel_image_mode_registry_password }}"

    - name: RH1 Demo | Build and push RHEL Image
      containers.podman.podman_image:
        name: "{{ rhel_image_mode_registry_url }}/{{ rhel_image_mode_registry_username }}/rhel-image-mode-demo:iso"
        build_args:
          force_rm: true
          file: Containerfile.iso
        path: "{{ workdir }}/image-repo"
        push: true

    - name: RH1 Demo | Generate output folder for resulting image
      ansible.builtin.file:
        path: "{{ workdir }}/output"

    - name: RH1 Demo | Get stats of the FS object
      ansible.builtin.stat:
        path: "{{ workdir }}/output/bootiso/install.iso"
      register: qcow_image

    - name: RH1 Demo | Generate ISO Image with bootc-image-builder
      become: true
      when: not qcow_image.stat.exists
      containers.podman.podman_container:
        name: bootc-image-builder
        image: registry.redhat.io/rhel9/bootc-image-builder:latest
        privileged: true
        remove: true
        pull: newer
        security_opt:
          - label=type:unconfined_t
        state: started
        volumes:
          - "/var/lib/containers/storage:/var/lib/containers/storage"
          - "{{ workdir }}/output:/output"
        command: "--type anaconda-iso --tls-verify=false {{ rhel_image_mode_registry_url }}/{{ rhel_image_mode_registry_username }}/rhel-image-mode-demo:iso"

    - name: RH1 Demo | Wait for image to be generated. It can take a while.
      ansible.builtin.wait_for:
        path: "{{ workdir }}/output/bootiso/install.iso"
        state: present
        timeout: 10000

    - name: RH1 Demo | Fix permissions
      become: true
      ansible.builtin.file:
        path: "{{ workdir }}"
        state: directory
        recurse: true
        mode: "0755"
        owner: "{{ ansible_user_id }}"
        group: "{{ ansible_user_id }}"

    - name: RH1 Demo | Cleanup local working directory
      ansible.builtin.file:
        path: "{{ workdir }}/image-repo"
        state: absent
